/*
Description
童程学校建立新校区，需要部署网线。学校联系了当地的一个网络解决方案提供商，要求能够提供一定数量的等长网线。学校希望网线越长越好，这样选手们之间的距离可以尽可能远一些。
该公司承接了这个任务。他们知道库存中每条网线的长度（精确到厘米，是指网线长度小数点后最多只有两位数，没有第 3 位），并且只要告诉他所需的网线长度（精确到厘米，是指网线长度小数点后最多只有两位数，没有第 3 位），他们都能够完成对网线的切割工作。但是，这次，所需的网线长度并不知道，这让该公司不知所措。
你需要编写一个程序，帮助该公司确定一个最长的网线长度，并且按此长度对库存中的网线进行切割，能够得到指定数量的网线。

Input
第一行包含两个整数 N 和 K，以单个空格隔开。N （1≤N≤10000）是库存中的网线数，K（1≤K≤10000）是需要的网线数量。
接下来 N 行，每行一个数，为库存中每条网线的长度（单位：米）。所有网线的长度至少 1cm，至多 100km。输入中的所有长度都精确到厘米，小数点后只有两位数，即保留到小数点后两位。

Output
该公司能够从库存的网线中切出指定数量的网线的最长长度（单位：米）。必须精确到厘米，即保留到小数点后两位。
若无法得到长度至少为 1cm 的指定数量的网线，则必须输出“ 0.00 ”（不包含引号）。

Sample Input 1
4 11
8.02
7.43
4.57
5.39

Sample Output 1
2.00

Hint
数据范围与提示：
1≤N≤10000，1≤K≤10000
*/
#include <iostream>
#include <iomanip>
using namespace std;

int n, k; // n 为网线数量, k 为分段数量
int a[10005]; // 存储每根网线长度

int main() {
    cin >> n >> k;
    for (int i = 1; i <= n; i++) {
        double x;
        cin >> x;
        a[i] = x * 100; // 统一单位为厘米
    }

    // 1. 确定寻找范围
    int L = 1, R = 100000 * 100;
    int ans = 0; // 记录答案
    int mid;

    while (L <= R) {
        // 2. 取中间值
        mid = (L + R) / 2;

        // 3. 计算切割后的数量
        int cnt = 0;
        for (int i = 1; i <= n; i++) {
            cnt = cnt + a[i] / mid;
        }

        // 4. 验证并调整范围
        if (cnt < k) {
            R = mid - 1;
        } else {
            ans = mid; // 记录答案
            L = mid + 1;
        }
    }

    // 输出时将单位转换为米
    cout << fixed << setprecision(2) << ans / 100.0;
    return 0;
}